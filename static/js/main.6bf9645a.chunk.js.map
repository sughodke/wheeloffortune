{"version":3,"sources":["MatterContext.js","useWorld.js","Needle.js","Pegs.js","useMatter.js","Wheel.js","MouseControl.js","App.js","index.js"],"names":["engine","Engine","create","render","Render","element","document","body","options","showAngleIndicator","wireframes","MatterContext","React","createContext","MatterContextProvider","children","initialContext","useEffect","lookAt","min","x","y","max","run","runner","Runner","Provider","value","useWorldAdd2","fn","hack","deps","useContext","useState","objs","setObjs","effectFn","useLayoutEffect","_objs","Composite","add","world","outerRadius","needle","Bodies","trapezoid","angle","Math","PI","friction","slop","Constraint","pointA","bodyB","length","pointB","stiffness","damping","visible","wheelBase","numPegs","pegRadius","innerRadius","pegSpacing","wheelPositions","Array","fill","map","_","i","sin","cos","wheelPegs","p","circle","mass","Body","setInertia","Infinity","wheelPegsJoint","bodyA","CanvasRenderingContext2D","prototype","fillTextCircle","text","radius","startRotation","from","numRadsPerLetter","this","save","translate","rotate","lookup","forEach","ch","ang","fillText","restore","onLoad","onLanded","onSpinning","useMatter","setLookup","count","r","cx","cy","canvas","createElement","width","height","ctx","getContext","getRandomColour","floor","random","delta","fillStyle","beginPath","moveTo","arc","lineTo","closePath","font","textAlign","image","Image","src","toDataURL","createTexture","texture","_lookup","textures","collisionFilter","group","category","mask","sprite","wheelConstraint","setInterval","last","currentAngle","Object","keys","sort","isSleeping","Pegs","Needle","mouse","Mouse","mouseConstraint","MouseConstraint","constraint","setAngle","winner","setWinner","setWheelBase","onSpin","useCallback","setAngularVelocity","angularVelocity","onClick","toFixed","Wheel","MouseControl","ReactDOM","StrictMode","App","getElementById"],"mappings":"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","file":"static/js/main.6bf9645a.chunk.js","sourcesContent":["import React, {useEffect} from \"react\"\nimport {Engine, Render, Runner} from 'matter-js'\n\n// create an engine\nconst engine = Engine.create()\n\n// create a renderer\nconst render = Render.create({\n    element: document.body,\n    engine: engine,\n    options: {\n        showAngleIndicator: false,\n        wireframes: false,\n    }\n})\n\nconst MatterContext = React.createContext({\n    engine,\n    render,\n})\n\nconst MatterContextProvider = ({ children, initialContext = {} }) => {\n    useEffect(() => {\n        // fit the render viewport to the scene\n        const zoom = 0.5\n        Render.lookAt(render, {\n            min: { x: -200 * zoom, y: -250 * zoom },\n            max: { x: 200 * zoom, y: 0 }\n        });\n\n        // run the renderer\n        Render.run(render);\n\n        // create runner\n        const runner = Runner.create();\n\n        // run the engine\n        Runner.run(runner, engine);\n    }, [engine])\n\n    return <MatterContext.Provider value={{ engine, render }}>\n        {children}\n    </MatterContext.Provider>\n}\n\n\nexport { MatterContext, MatterContextProvider }\n","import {useContext, useEffect, useLayoutEffect, useState} from \"react\";\nimport {MatterContext} from \"./MatterContext\";\nimport {Composite} from \"matter-js\";\n\nexport const useWorldAdd = (objs, hack = false) => {\n    // noinspection JSCheckFunctionSignatures\n    const {engine} = useContext(MatterContext);\n    const effectFn = hack ? useEffect : useLayoutEffect\n\n    effectFn(() => {\n        Composite.add(engine.world, objs)\n    }, [engine])\n}\n\nexport const useWorldAdd2 = (fn, hack = false, deps = []) => {\n    // noinspection JSCheckFunctionSignatures\n    const {engine} = useContext(MatterContext)\n    const [objs, setObjs] = useState([])\n\n    const effectFn = hack ? useEffect : useLayoutEffect\n    effectFn(() => {\n        const _objs = fn()\n        Composite.add(engine.world, _objs)\n        setObjs(_objs)\n    }, [engine, ...deps])\n\n    return objs\n}\n","import { Bodies, Constraint } from \"matter-js\";\nimport {useWorldAdd2} from \"./useWorld\";\n\n// add the needle\nexport default ({ outerRadius }) => {\n    useWorldAdd2(() => {\n        const needle = Bodies.trapezoid(0, outerRadius * -1.10, 10, 40, 0.85, {\n            angle: Math.PI,\n            friction: 0.4,\n            slop: 1\n        });\n        const needleConstraint = Constraint.create({\n            pointA: { x: 0, y: outerRadius * -1.10 },\n            bodyB: needle,\n            length: 0\n        });\n        const needleJointLeft = Constraint.create({\n            pointA: { x: -20, y: outerRadius * -1.05 },\n            bodyB: needle,\n            pointB: { x: 0, y: -15 },\n            stiffness: 0.01,\n            damping: 0.5,\n            render: { visible: false }\n        });\n        const needleJointRight = Constraint.create({\n            pointA: { x: 20, y: outerRadius * -1.05 },\n            bodyB: needle,\n            pointB: { x: 0, y: -15 },\n            stiffness: 0.01,\n            damping: 0.5,\n            render: { visible: false }\n        });\n        return [needle, needleConstraint, needleJointLeft, needleJointRight]\n    }, true)\n\n    return <></>\n}\n","import { Bodies, Body, Composite, Constraint } from \"matter-js\";\nimport {useWorldAdd2} from \"./useWorld\";\n\n// add the pegs to the wheel\nexport default ({ wheelBase, outerRadius, numPegs, pegRadius = 4 }) => {\n    useWorldAdd2(() => {\n        if (!wheelBase) return []\n\n        const innerRadius = outerRadius - 10\n        const pegSpacing = numPegs / 2\n\n        const wheelPositions = Array(numPegs).fill(0).map((_, i) => ({\n            x: innerRadius * Math.sin(i * Math.PI/pegSpacing),\n            y: innerRadius * Math.cos(i * Math.PI/pegSpacing)\n        }))\n\n        const wheelPegs = wheelPositions.map(p =>\n            Bodies.circle(p.x, p.y, pegRadius, {\n                mass: 2,\n                friction: 0.4,\n                slop: 1\n            }, 6))\n\n        // https://stackoverflow.com/a/52693401/721564\n        wheelPegs.map(p => Body.setInertia(p, Infinity))\n\n        const wheelPegsJoint = wheelPegs.map((p, i) =>\n            Constraint.create({\n                pointB: wheelPositions[i],\n                bodyA: p,\n                bodyB: wheelBase,\n                // stiffness: 0.1,\n                // damping: 0.05,\n                length: 0,\n            }))\n\n        return [...wheelPegs, ...wheelPegsJoint]\n    }, false, [wheelBase])\n\n    return <></>\n}\n","import {useContext} from \"react\";\nimport {MatterContext} from \"./MatterContext\";\n\nexport default () => {\n    // noinspection JSCheckFunctionSignatures\n    return useContext(MatterContext);\n}\n","import {useEffect, useState} from \"react\"\nimport {Bodies, Constraint} from \"matter-js\"\nimport {useWorldAdd2} from \"./useWorld\";\nimport Needle from \"./Needle\";\nimport Pegs from \"./Pegs\";\nimport useMatter from \"./useMatter\";\n\n// https://stackoverflow.com/a/6062196/721564\nCanvasRenderingContext2D.prototype.fillTextCircle = function(text,x,y,radius,startRotation) {\n    text = Array.from(text)\n    const numRadsPerLetter = 2 * Math.PI / text.length;\n    this.save();\n    this.translate(x,y);\n    this.rotate(startRotation);\n\n    const lookup = {}\n    text.forEach((ch, i) => {\n        this.save();\n        const ang = i*numRadsPerLetter\n        this.rotate(ang);\n\n        this.fillText(ch,0,-radius);\n        this.restore();\n\n        lookup[ang] = ch\n    })\n\n    this.restore();\n\n    return lookup\n}\n\nconst createTexture = (count = 16, r = 100, cx = 100, cy = 100) => {\n    const canvas = document.createElement('canvas');\n    canvas.width = canvas.height = 2 * r\n    const ctx = canvas.getContext('2d');\n\n    // https://stackoverflow.com/a/50529742/721564\n    function getRandomColour() {\n        const red = Math.floor(Math.random() * 255);\n        const green = Math.floor(Math.random() * 255);\n        const blue = Math.floor(Math.random() * 255);\n\n        return \"rgb(\" + red + \",\" + green + \",\" + blue + \" )\";\n    }\n\n    const delta = 2 * Math.PI / count;\n\n    [...Array(count)].forEach((_, i) => {\n        ctx.fillStyle = getRandomColour()\n\n        ctx.beginPath();\n        ctx.moveTo(cx, cy);\n        ctx.arc(cx, cy, r, delta * (i - 1), delta * i);\n        ctx.lineTo(cx, cy);\n        ctx.closePath();\n        ctx.fill();\n    })\n\n    ctx.font = \"15px Arial\";\n    ctx.textAlign = \"left\";\n    const lookup = ctx.fillTextCircle(' 😃😄😁😆😅🤣😂🙂🙃😉😊😇🥰😍🤩', cx, cy, r - 20, Math.PI/count/2)\n    // const lookup = ctx.fillTextCircle('1234567890abcdef', cx, cy, r - 20, Math.PI/count/2)\n\n    const image = new Image();\n    image.src = canvas.toDataURL();\n\n    return [ image, lookup ]\n}\n\n// create wheel that can spin\nexport default ({ numPegs = 16, outerRadius = 100, onLoad, onLanded, onSpinning }) => {\n    const { render } = useMatter()\n    const [lookup, setLookup] = useState({})\n\n    // Hack to load in the texture\n    useEffect(() => {\n        const [texture, _lookup] = createTexture(numPegs, outerRadius)\n        render.textures['USER_DEFINED_1'] = texture\n        setLookup(_lookup)\n    }, [render])\n\n    const [wheelBase] = useWorldAdd2(() => {\n        const wheelBase = Bodies.circle(0, 0, outerRadius, {\n            collisionFilter: {\n                group: -1,\n                category: 0,\n                mask: 0x0\n            },\n            render: {\n                sprite: {\n                    texture: 'USER_DEFINED_1'\n                }\n            },\n        }, numPegs)\n\n        const wheelConstraint = Constraint.create({\n            pointA: { x: 0, y: 0 },\n            bodyB: wheelBase,\n            length: 0\n        })\n\n        onLoad(wheelBase)\n        return [wheelBase, wheelConstraint]\n    })\n\n    useEffect(() => {\n        if (!wheelBase) return\n\n        setInterval(() => {\n            let currentAngle = wheelBase.angle > 0\n                ? wheelBase.angle % (Math.PI*2)\n                : (wheelBase.angle % -(Math.PI*2)) + Math.PI*2\n\n            // currentAngle += 3 *Math.PI / 4\n            onSpinning(currentAngle)\n\n            let last\n            Object.keys(lookup).sort().forEach(i => {\n                last = i < currentAngle ? i : last\n            })\n            onLanded(lookup[last])\n\n            if (wheelBase.isSleeping) {\n                onLanded('❤️')\n            }\n        }, 50)\n    }, [wheelBase, lookup])\n\n    return <>\n        <Pegs numPegs={numPegs} outerRadius={outerRadius} wheelBase={wheelBase} />\n        <Needle outerRadius={outerRadius}/>\n    </>\n}\n","import {useEffect} from \"react\"\nimport useMatter from \"./useMatter\"\nimport {\n    MouseConstraint,\n    Mouse,\n    Composite\n} from 'matter-js'\n\nexport default () => {\n    const { render, engine } = useMatter()\n\n    useEffect(() => {\n        // add mouse control\n        const mouse = Mouse.create(render.canvas),\n            mouseConstraint = MouseConstraint.create(engine, {\n                mouse: mouse,\n                constraint: {\n                    stiffness: 0.2,\n                    render: {\n                        // TODO make invisible, once mouse masks to wheelBase\n                        visible: true\n                    },\n                    // collisionFilter: {}\n                }\n            })\n\n        Composite.add(engine.world, mouseConstraint)\n\n        // keep the mouse in sync with rendering\n        render.mouse = mouse\n    }, [render, engine])\n\n    return <></>\n}\n","import {Body} from 'matter-js'\nimport {MatterContextProvider} from \"./MatterContext\";\nimport {useCallback, useEffect, useState} from \"react\";\nimport Wheel from \"./Wheel\";\nimport MouseControl from \"./MouseControl\";\n\nexport default () => {\n    const [angle, setAngle] = useState(0)\n    const [winner, setWinner] = useState('')\n    const [wheelBase, setWheelBase] = useState(null)\n\n    const onSpin = useCallback(() => {\n        Body.setAngularVelocity(wheelBase, wheelBase.angularVelocity + 3 * Math.PI/100);\n    }, [wheelBase])\n\n    return <div>\n        <button onClick={onSpin}>spin the wheel!</button>\n        <label>Angle: </label><span>{angle.toFixed(1)}</span>\n        <label>Winner: </label><span>{winner}</span>\n        <MatterContextProvider>\n            <Wheel onLoad={setWheelBase} onLanded={setWinner} onSpinning={setAngle} />\n            <MouseControl />\n        </MatterContextProvider>\n    </div>\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n\n\n\n\n"],"sourceRoot":""}