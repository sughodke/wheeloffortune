{"version":3,"sources":["MatterContext.js","useWorld.js","Needle.js","Pegs.js","Wheel.js","MouseControl.js","useMatter.js","App.js","index.js"],"names":["engine","Engine","create","render","Render","element","document","body","options","showAngleIndicator","wireframes","MatterContext","React","createContext","MatterContextProvider","children","initialContext","useEffect","lookAt","min","x","y","max","run","runner","Runner","Provider","value","useWorldAdd","objs","hack","useContext","effectFn","useLayoutEffect","Composite","add","world","outerRadius","needle","Bodies","trapezoid","angle","Math","PI","friction","slop","needleConstraint","Constraint","pointA","bodyB","length","needleJointLeft","pointB","stiffness","damping","needleJointRight","wheelBase","numPegs","pegRadius","innerRadius","pegSpacing","wheelPositions","Array","fill","map","_","i","sin","cos","wheelPegs","p","circle","mass","Body","setInertia","Infinity","wheelPegsJoint","bodyA","onLoad","collisionFilter","group","category","mask","fillStyle","wheelConstraint","Pegs","Needle","mouse","Mouse","canvas","mouseConstraint","MouseConstraint","constraint","visible","useState","setAngle","setWheelBase","onSpin","useCallback","setAngularVelocity","angularVelocity","setInterval","currentAngle","toFixed","onClick","Wheel","MouseControl","ReactDOM","StrictMode","App","getElementById"],"mappings":"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","file":"static/js/main.c489ae61.chunk.js","sourcesContent":["import React, {useEffect} from \"react\"\nimport {Engine, Render, Runner} from 'matter-js'\n\n// create an engine\nconst engine = Engine.create()\n\n// create a renderer\nconst render = Render.create({\n    element: document.body,\n    engine: engine,\n    options: {\n        showAngleIndicator: false,\n        wireframes: false,\n    }\n})\n\nconst MatterContext = React.createContext({\n    engine,\n    render,\n})\n\nconst MatterContextProvider = ({ children, initialContext = {} }) => {\n    useEffect(() => {\n        // fit the render viewport to the scene\n        const zoom = 0.5\n        Render.lookAt(render, {\n            min: { x: -200 * zoom, y: -250 * zoom },\n            max: { x: 200 * zoom, y: 0 }\n        });\n\n        // run the renderer\n        Render.run(render);\n\n        // create runner\n        const runner = Runner.create();\n\n        // run the engine\n        Runner.run(runner, engine);\n    }, [engine])\n\n    return <MatterContext.Provider value={{ engine, render }}>\n        {children}\n    </MatterContext.Provider>\n}\n\n\nexport { MatterContext, MatterContextProvider }\n","import {useContext, useEffect, useLayoutEffect} from \"react\";\nimport {MatterContext} from \"./MatterContext\";\nimport {Composite} from \"matter-js\";\n\nexport const useWorldAdd = (objs, hack = false) => {\n    // noinspection JSCheckFunctionSignatures\n    const {engine} = useContext(MatterContext);\n    const effectFn = hack ? useEffect : useLayoutEffect\n\n    effectFn(() => {\n        Composite.add(engine.world, objs)\n    }, [engine])\n}\n","import { Bodies, Constraint } from \"matter-js\";\nimport {useWorldAdd} from \"./useWorld\";\n\n// add the needle\nexport default ({ outerRadius }) => {\n    const needle = Bodies.trapezoid(0, outerRadius * -1.10, 10, 40, 0.85, {\n        angle: Math.PI,\n        friction: 0.4,\n        slop: 1\n    });\n    const needleConstraint = Constraint.create({\n        pointA: { x: 0, y: outerRadius * -1.10 },\n        bodyB: needle,\n        length: 0\n    });\n    const needleJointLeft = Constraint.create({\n        pointA: { x: -20, y: outerRadius * -1.05 },\n        bodyB: needle,\n        pointB: { x: 0, y: -15 },\n        stiffness: 0.01,\n        damping: 0.5,\n    });\n    const needleJointRight = Constraint.create({\n        pointA: { x: 20, y: outerRadius * -1.05 },\n        bodyB: needle,\n        pointB: { x: 0, y: -15 },\n        stiffness: 0.01,\n        damping: 0.5,\n    });\n    useWorldAdd([needle, needleConstraint, needleJointLeft, needleJointRight], true)\n\n    return <></>\n}\n","import { Bodies, Body, Composite, Constraint } from \"matter-js\";\nimport {useWorldAdd} from \"./useWorld\";\n\n// add the pegs to the wheel\nexport default ({ wheelBase, outerRadius, numPegs, pegRadius = 4 }) => {\n    const innerRadius = outerRadius - 10\n    const pegSpacing = numPegs / 2\n\n    const wheelPositions = Array(numPegs).fill(0).map((_, i) => ({\n        x: innerRadius * Math.sin(i * Math.PI/pegSpacing + Math.PI/pegSpacing/2),\n        y: innerRadius * Math.cos(i * Math.PI/pegSpacing + Math.PI/pegSpacing/2)\n    }))\n\n    const wheelPegs = wheelPositions.map(p =>\n        Bodies.circle(p.x, p.y, pegRadius, {\n            mass: 2,\n            friction: 0.4,\n            slop: 1\n        }, 6))\n\n    // https://stackoverflow.com/a/52693401/721564\n    wheelPegs.map(p => Body.setInertia(p, Infinity))\n\n    const wheelPegsJoint = wheelPegs.map((p, i) =>\n        Constraint.create({\n            pointB: wheelPositions[i],\n            bodyA: p,\n            bodyB: wheelBase,\n            // stiffness: 0.1,\n            // damping: 0.05,\n            length: 0,\n        }))\n\n    useWorldAdd([...wheelPegs, ...wheelPegsJoint])\n\n    return <></>\n}\n","import {useEffect} from \"react\"\nimport {Bodies, Constraint} from \"matter-js\"\nimport {useWorldAdd} from \"./useWorld\";\nimport Needle from \"./Needle\";\nimport Pegs from \"./Pegs\";\n\n// create wheel that can spin\nexport default ({ numPegs = 16, outerRadius = 100, onLoad }) => {\n\n    const wheelBase = Bodies.circle(0, 0, outerRadius, {\n        collisionFilter: {\n            group: -1,\n            category: 0,\n            mask: 0x0\n        },\n        render: {\n            fillStyle: '#5f5f7e'\n        },\n    }, numPegs)\n\n    const wheelConstraint = Constraint.create({\n        pointA: { x: 0, y: 0 },\n        bodyB: wheelBase,\n        length: 0\n    })\n\n    useEffect(() => {\n        onLoad(wheelBase)\n    }, [])\n\n    useWorldAdd([wheelBase, wheelConstraint])\n\n    return <>\n        <Pegs numPegs={numPegs} outerRadius={outerRadius} wheelBase={wheelBase} />\n        <Needle outerRadius={outerRadius}/>\n    </>\n}\n","import {useEffect} from \"react\"\nimport useMatter from \"./useMatter\"\nimport {\n    MouseConstraint,\n    Mouse,\n    Composite\n} from 'matter-js'\n\nexport default () => {\n    const { render, engine } = useMatter()\n\n    useEffect(() => {\n        // add mouse control\n        const mouse = Mouse.create(render.canvas),\n            mouseConstraint = MouseConstraint.create(engine, {\n                mouse: mouse,\n                constraint: {\n                    stiffness: 0.2,\n                    render: {\n                        visible: true\n                    },\n                    // collisionFilter: {}\n                }\n            })\n\n        Composite.add(engine.world, mouseConstraint)\n\n        // keep the mouse in sync with rendering\n        render.mouse = mouse\n    }, [render, engine])\n\n    return <></>\n}\n","import {useContext} from \"react\";\nimport {MatterContext} from \"./MatterContext\";\n\nexport default () => {\n    // noinspection JSCheckFunctionSignatures\n    return useContext(MatterContext);\n}\n","import {Body} from 'matter-js'\nimport {MatterContextProvider} from \"./MatterContext\";\nimport {useCallback, useEffect, useState} from \"react\";\nimport Wheel from \"./Wheel\";\nimport MouseControl from \"./MouseControl\";\n\nexport default () => {\n    const [angle, setAngle] = useState(0)\n    const [wheelBase, setWheelBase] = useState(null)\n\n    const onSpin = useCallback(() => {\n        Body.setAngularVelocity(wheelBase, wheelBase.angularVelocity + 3 * Math.PI/100);\n    }, [wheelBase])\n\n    useEffect(() => {\n        if (!wheelBase) return\n\n        setInterval(() => {\n            const currentAngle = 180/Math.PI * wheelBase.angle % 360;\n            setAngle(currentAngle.toFixed(1))\n        }, 50)\n    }, [wheelBase])\n\n    return <div>\n        <button onClick={onSpin}>spin the wheel!</button>\n        <label>Angle: </label><span>{angle}</span>\n        <MatterContextProvider>\n            <Wheel onLoad={setWheelBase}/>\n            <MouseControl />\n        </MatterContextProvider>\n    </div>\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n\n\n\n\n"],"sourceRoot":""}